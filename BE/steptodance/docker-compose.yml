version: "3"

services:
  mysql:
    container_name: mysql
    image: mysql:8.0
    ports:
      - ${MYSQL_BINDING_PORT}:3306
    volumes:
      - ${MYSQL_DATA_PATH}:/var/lib/mysql
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USERNAME: ${MYSQL_USERNAME}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    restart: unless-stopped

  redis:
    container_name: redis
    image: redis:6.2.6-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD} --port 6379
    ports:
      - ${REDIS_BINDING_PORT}:6379
    restart: unless-stopped

  mongodb:
    container_name: mongodb
    image: mongo
    ports:
      - ${DANCE_MONGODB_BINDING_PORT}:27017
    volumes:
      - ${DANCE_MONGODB_DATA_PATH}:/data/db
    environment:
      MONGO_INITDB_DATABASE: dance
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: ${DANCE_MONGODB_PASSWORD}
      DEV_TRIP_MONGODB_BINDING_PORT: ${DANCE_MONGODB_BINDING_PORT}
    restart: no

  spring:
    container_name: spring
    image: dance_spring
    ports:
      - ${SPRING_BINDING_PORT}:8080
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - mysql
      - redis
    environment:
      MYSQL_BINDING_PORT: ${MYSQL_BINDING_PORT}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USERNAME: ${MYSQL_USERNAME}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      REDIS_BINDING_PORT: ${REDIS_BINDING_PORT}
      KAFKA1_BINDING_PORT: ${KAFKA1_BINDING_PORT}
      KAFKA2_BINDING_PORT: ${KAFKA2_BINDING_PORT}
      KAFKA3_BINDING_PORT: ${KAFKA3_BINDING_PORT}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      KAKAO_KEY: ${KAKAO_KEY}
      KAKAO_REDIRECT_URL: ${KAKAO_REDIRECT_URL}
      FFMPEG_LOCATION: ${FFMPEG_LOCATION}
      FFPROBE_LOCATION: ${FFPROBE_LOCATION}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      DANCE_MONGODB_PASSWORD: ${DANCE_MONGODB_PASSWORD}
      DANCE_MONGODB_BINDING_PORT: ${DANCE_MONGODB_BINDING_PORT}
    restart: always

  kafka1:
    image: confluentinc/cp-kafka:7.6.0
    hostname: kafka1
    container_name: kafka1
    ports:
      - ${KAFKA1_BINDING_PORT}:9092
    environment:
      KAFKA1_BINDING_PORT: ${KAFKA1_BINDING_PORT}
      KAFKA_BROKER_ID: 1
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka1:9093,2@kafka2:9093,3@kafka3:9093
      KAFKA_AUTO_LEADER_REBALANCE_ENABLE: "true"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100
      CLUSTER_ID: kafka-docker-cluster-1
      ALLOW_PLAINTEXT_LISTENER: 'yes'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
      KAFKA_MESSAGE_MAX_BYTES: 20971520
  kafka2:
    image: confluentinc/cp-kafka:7.6.0
    hostname: kafka2
    container_name: kafka2
    ports:
      - ${KAFKA2_BINDING_PORT}:9093
    environment:
      KAFKA2_BINDING_PORT: ${KAFKA2_BINDING_PORT}
      KAFKA_BROKER_ID: 2
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9092
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka1:9093,2@kafka2:9093,3@kafka3:9093
      KAFKA_AUTO_LEADER_REBALANCE_ENABLE: "true"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100
      CLUSTER_ID: kafka-docker-cluster-1
      ALLOW_PLAINTEXT_LISTENER: 'yes'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
      KAFKA_MESSAGE_MAX_BYTES: 20971520
  kafka3:
    image: confluentinc/cp-kafka:7.6.0
    hostname: kafka3
    container_name: kafka3
    ports:
      - ${KAFKA3_BINDING_PORT}:9094
    environment:
      KAFKA3_BINDING_PORT: ${KAFKA3_BINDING_PORT}
      KAFKA_BROKER_ID: 3
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:9092
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka1:9093,2@kafka2:9093,3@kafka3:9093
      KAFKA_AUTO_LEADER_REBALANCE_ENABLE: "true"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100
      CLUSTER_ID: kafka-docker-cluster-1
      ALLOW_PLAINTEXT_LISTENER: 'yes'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
      KAFKA_MESSAGE_MAX_BYTES: 20971520
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - ${KAFKA_UI_BINDING_PORT}:8080
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    environment:
      KAFKA_CLUSTERS_0_NAME: kafka-docker-cluster-1
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka1:9092,kafka2:9092,kafka3:9092